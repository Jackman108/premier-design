version: "3"

services:
  frontend:
    build:
      context: ./premier-design
      dockerfile: Dockerfile.prod
    container_name: frontend-docker-container
    restart: unless-stopped
    command: npm run start
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_DATABASE}
    networks:
      - docker-network

  db:
    build:
      context: ./pgdata
      dockerfile: Dockerfile
    container_name: postgres-docker-container
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-docker-container
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - db
    networks:
      - docker-network

volumes:
  pgdata:

networks:
  docker-network:
    driver: bridge