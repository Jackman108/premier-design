version: "3"

services:
  frontend:
    build:
      context: ./premier-design
      dockerfile: Dockerfile.dev
    container_name: frontend-docker-container
    restart: unless-stopped
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_DATABASE}
      - NODE_ENV=development
    volumes:
      - ./premier-design:/app
    networks:
      - docker-network

  db:
    build:
      context: ./pgdata
      dockerfile: Dockerfile
    container_name: postgres-docker-container
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    networks:
      - docker-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-docker-container
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/nginx.conf
      - ./nginx/certificates:/certificates
    depends_on:
      - frontend
      - db
    networks:
      - docker-network


networks:
  docker-network:
    driver: bridge